import org.gradle.api.initialization.resolve.RepositoriesMode

pluginManagement {

    /**
     * The pluginManagement {repositories {...}} block configures the
     * repositories Gradle uses to search or download the Gradle plugins and
     * their transitive dependencies. Gradle pre-configures support for remote
     * repositories such as JCenter, Maven Central, and Ivy. You can also use
     * local repositories or define your own remote repositories. The code below
     * defines the Gradle Plugin Portal, Google's Maven repository,
     * and the Maven Central Repository as the repositories Gradle should use to look for its dependencies.
     */

    repositories {
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.aliyun.com/repository/google"}
        google()
        mavenCentral()
    }
}
dependencyResolutionManagement {

    /**
     * The dependencyResolutionManagement { repositories {...}}
     * block is where you configure the repositories and dependencies used by
     * all modules in your project, such as libraries that you are using to
     * create your application. However, you should configure module-specific
     * dependencies in each module-level build.gradle file. For new projects,
     * Android Studio includes Google's Maven repository and the
     * Maven Central Repository by
     * default, but it does not configure any dependencies (unless you select a
     * template that requires some).
     */

    repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.aliyun.com/repository/google"}
        google()
        mavenCentral()
    }
}

def initGradleEnvironment(){
    // 从config.properties获取app配置信息，减少不必要的build
    Properties properties = new Properties()
    File propertyFile = new File(rootDir.getAbsolutePath()+ "/config.properties")
    properties.load(propertyFile.newDataInputStream())
    /*
      根据Project、Gradle生命周期的介绍，settings对象的创建位于具体Project创建之前，而Gradle底对象已经创建好了。
      所以，config.properties的信息读出来后，通过extra属性的方式设置到gradle对象中
      而具体Project在执行的时候，就可以直接从gradle对象中得到这些属性了！
    */
    gradle.ext.compileSdkVersion =properties.getProperty('app.compileSdkVersion')
    gradle.ext.buildToolsVersion =properties.getProperty('app.buildToolsVersion')
    gradle.ext.applicationId =properties.getProperty('app.applicationId')
    gradle.ext.minSdkVersion =properties.getProperty('app.minSdkVersion')
    gradle.ext.targetSdkVersion =properties.getProperty('app.targetSdkVersion')
    gradle.ext.versionCode =properties.getProperty('app.versionCode')
    gradle.ext.versionName =properties.getProperty('app.versionName')
}

initGradleEnvironment()

rootProject.name = "fragmject"
include ':app'
include ':library-base'
include ':library-picture'
include ':library-plugin'
